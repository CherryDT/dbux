// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dbux-babel-plugin allFunctionTypes.es5.js: allFunctionTypes.es5.js 1`] = `
"
function f1() {

}

const f2 = function _f2() {

};

const f3 = () => {

};

const o = {
  f4() {},
  f5: () => {}
};

class C {
  constructor() {}
  f6() {}
  f7 = () => {};
}

// // generator function
// function *f8() {
//   yield 1;
//   yield 2;
// }

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _dbuxRuntime = require('dbux-runtime')[\\"default\\"];

var _dbux = _dbux_init(_dbuxRuntime);

var _contextId = _dbux.getProgramContextId();

try {
  var f1 = function f1() {
    var _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  };

  var f2 = function _f2() {
    var _contextId3 = _dbux.pushImmediate(3);

    try {} finally {
      _dbux.popImmediate(_contextId3);
    }
  };

  var f3 = function f3() {
    var _contextId4 = _dbux.pushImmediate(4);

    try {} finally {
      _dbux.popImmediate(_contextId4);
    }
  };

  var o = {
    f4: function f4() {
      var _contextId5 = _dbux.pushImmediate(5);

      try {} finally {
        _dbux.popImmediate(_contextId5);
      }
    },
    f5: function f5() {
      var _contextId6 = _dbux.pushImmediate(6);

      try {} finally {
        _dbux.popImmediate(_contextId6);
      }
    }
  };

  var C =
  /*#__PURE__*/
  function () {
    function C() {
      this.f7 = function () {
        var _contextId9 = _dbux.pushImmediate(9);

        try {} finally {
          _dbux.popImmediate(_contextId9);
        }
      };

      var _contextId7 = _dbux.pushImmediate(7);

      try {} finally {
        _dbux.popImmediate(_contextId7);
      }
    }

    var _proto = C.prototype;

    _proto.f6 = function f6() {
      var _contextId8 = _dbux.pushImmediate(8);

      try {} finally {
        _dbux.popImmediate(_contextId8);
      }
    };

    return C;
  }(); // // generator function
  // function *f8() {
  //   yield 1;
  //   yield 2;
  // }

} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"allFunctionTypes.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/allFunctionTypes.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 28,
          \\"column\\": 4
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 7,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"_f2\\",
      \\"displayName\\": \\"_f2\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 9,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 11,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f3\\",
      \\"displayName\\": \\"f3\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 14,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 14,
          \\"column\\": 9
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f4\\",
      \\"displayName\\": \\"f4\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 15,
          \\"column\\": 6
        },
        \\"end\\": {
          \\"line\\": 15,
          \\"column\\": 14
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f5\\",
      \\"displayName\\": \\"f5\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 19,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 18
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"constructor\\",
      \\"displayName\\": \\"C.constructor\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 20,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 20,
          \\"column\\": 9
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f6\\",
      \\"displayName\\": \\"C.f6\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 21,
          \\"column\\": 7
        },
        \\"end\\": {
          \\"line\\": 21,
          \\"column\\": 15
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f7\\",
      \\"displayName\\": \\"C.f7\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin allFunctionTypes.esNext.js: allFunctionTypes.esNext.js 1`] = `
"
function f1() {

}

const f2 = function _f2() {

};

const f3 = () => {

};

const o = {
  f4() {},
  f5: () => {}
};

class C {
  constructor() {}
  f6() {}
  f7 = () => {};
}

// // generator function
// function *f8() {
//   yield 1;
//   yield 2;
// }

      ↓ ↓ ↓ ↓ ↓ ↓

const _dbuxRuntime = require('dbux-runtime').default;

const _dbux = _dbux_init(_dbuxRuntime);

const _contextId = _dbux.getProgramContextId();

try {
  function f1() {
    const _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  }

  const f2 = function _f2() {
    const _contextId3 = _dbux.pushImmediate(3);

    try {} finally {
      _dbux.popImmediate(_contextId3);
    }
  };

  const f3 = () => {
    const _contextId4 = _dbux.pushImmediate(4);

    try {} finally {
      _dbux.popImmediate(_contextId4);
    }
  };

  const o = {
    f4() {
      const _contextId5 = _dbux.pushImmediate(5);

      try {} finally {
        _dbux.popImmediate(_contextId5);
      }
    },

    f5: () => {
      const _contextId6 = _dbux.pushImmediate(6);

      try {} finally {
        _dbux.popImmediate(_contextId6);
      }
    }
  };

  class C {
    constructor() {
      this.f7 = () => {
        const _contextId9 = _dbux.pushImmediate(9);

        try {} finally {
          _dbux.popImmediate(_contextId9);
        }
      };

      const _contextId7 = _dbux.pushImmediate(7);

      try {} finally {
        _dbux.popImmediate(_contextId7);
      }
    }

    f6() {
      const _contextId8 = _dbux.pushImmediate(8);

      try {} finally {
        _dbux.popImmediate(_contextId8);
      }
    }

  } // // generator function
  // function *f8() {
  //   yield 1;
  //   yield 2;
  // }

} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"allFunctionTypes.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/allFunctionTypes.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 28,
          \\"column\\": 4
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 7,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"_f2\\",
      \\"displayName\\": \\"_f2\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 9,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 11,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f3\\",
      \\"displayName\\": \\"f3\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 14,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 14,
          \\"column\\": 9
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f4\\",
      \\"displayName\\": \\"f4\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 15,
          \\"column\\": 6
        },
        \\"end\\": {
          \\"line\\": 15,
          \\"column\\": 14
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f5\\",
      \\"displayName\\": \\"f5\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 19,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 18
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"constructor\\",
      \\"displayName\\": \\"C.constructor\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 20,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 20,
          \\"column\\": 9
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f6\\",
      \\"displayName\\": \\"C.f6\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 21,
          \\"column\\": 7
        },
        \\"end\\": {
          \\"line\\": 21,
          \\"column\\": 15
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f7\\",
      \\"displayName\\": \\"C.f7\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin async-example1.es5.js: async-example1.es5.js 1`] = `
"
function f0() {  
}

async function af1(a) {
  return Promise.resolve(a);
}

async function af2() {
  await af1(1);
  await af1(2);

  return 2 + await af1(3) - 3;
}

async function af33(delay) {
  return new Promise(r => {
    setTimeout(r.bind(33), delay);
  });
}

async function af44() {
  const a = await af33(100);
  const b = await af33(50);

  return a+b + af33(10);
}

(async function main() {
  console.log(
    await Promise.all([
      af2(),
      af44()
    ])
  );

  f0();
})();

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

require(\\"core-js/modules/es.function.bind\\");

require(\\"core-js/modules/es.object.to-string\\");

require(\\"core-js/modules/es.promise\\");

require(\\"core-js/modules/web.timers\\");

require(\\"regenerator-runtime/runtime\\");

var _dbuxRuntime = require('dbux-runtime')[\\"default\\"];

var _dbux = _dbux_init(_dbuxRuntime);

var _contextId = _dbux.getProgramContextId();

try {
  var f0 = function f0() {
    var _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  };

  var af1 = function af1(a) {
    var _contextId3;

    return regeneratorRuntime.async(function af1$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _contextId3 = _dbux.pushImmediate(3);
            _context.prev = 1;
            return _context.abrupt(\\"return\\", Promise.resolve(a));

          case 3:
            _context.prev = 3;

            _dbux.popImmediate(_contextId3);

            return _context.finish(3);

          case 6:
          case \\"end\\":
            return _context.stop();
        }
      }
    }, null, null, [[1,, 3, 6]]);
  };

  var af2 = function af2() {
    var _contextId4, _awaitContextId, _awaitContextId2, _awaitContextId3;

    return regeneratorRuntime.async(function af2$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _contextId4 = _dbux.pushImmediate(4);
            _context5.prev = 1;

            _dbux.resume(5, _awaitContextId, function _callee() {
              return regeneratorRuntime.async(function _callee$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.next = 2;
                      return regeneratorRuntime.awrap(_awaitContextId = _dbux.interrupt());

                    case 2:
                      return _context2.abrupt(\\"return\\", _context2.sent);

                    case 3:
                    case \\"end\\":
                      return _context2.stop();
                  }
                }
              });
            }());

            _dbux.resume(6, _awaitContextId2, function _callee2() {
              return regeneratorRuntime.async(function _callee2$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      _context3.next = 2;
                      return regeneratorRuntime.awrap(_awaitContextId2 = _dbux.interrupt());

                    case 2:
                      return _context3.abrupt(\\"return\\", _context3.sent);

                    case 3:
                    case \\"end\\":
                      return _context3.stop();
                  }
                }
              });
            }());

            return _context5.abrupt(\\"return\\", 2 + _dbux.resume(7, _awaitContextId3, function _callee3() {
              return regeneratorRuntime.async(function _callee3$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      _context4.next = 2;
                      return regeneratorRuntime.awrap(_awaitContextId3 = _dbux.interrupt());

                    case 2:
                      return _context4.abrupt(\\"return\\", _context4.sent);

                    case 3:
                    case \\"end\\":
                      return _context4.stop();
                  }
                }
              });
            }()) - 3);

          case 5:
            _context5.prev = 5;

            _dbux.popImmediate(_contextId4);

            return _context5.finish(5);

          case 8:
          case \\"end\\":
            return _context5.stop();
        }
      }
    }, null, null, [[1,, 5, 8]]);
  };

  var af33 = function af33(delay) {
    var _contextId5;

    return regeneratorRuntime.async(function af33$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _contextId5 = _dbux.pushImmediate(8);
            _context6.prev = 1;
            return _context6.abrupt(\\"return\\", new Promise(function (r) {
              var _contextId6 = _dbux.pushImmediate(9);

              try {
                setTimeout(_dbux.scheduleCallback(10, _contextId6, r.bind(33)), delay);
              } finally {
                _dbux.popImmediate(_contextId6);
              }
            }));

          case 3:
            _context6.prev = 3;

            _dbux.popImmediate(_contextId5);

            return _context6.finish(3);

          case 6:
          case \\"end\\":
            return _context6.stop();
        }
      }
    }, null, null, [[1,, 3, 6]]);
  };

  var af44 = function af44() {
    var _contextId7, _awaitContextId4, _awaitContextId5, a, b;

    return regeneratorRuntime.async(function af44$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _contextId7 = _dbux.pushImmediate(11);
            _context9.prev = 1;
            a = _dbux.resume(12, _awaitContextId4, function _callee4() {
              return regeneratorRuntime.async(function _callee4$(_context7) {
                while (1) {
                  switch (_context7.prev = _context7.next) {
                    case 0:
                      _context7.next = 2;
                      return regeneratorRuntime.awrap(_awaitContextId4 = _dbux.interrupt());

                    case 2:
                      return _context7.abrupt(\\"return\\", _context7.sent);

                    case 3:
                    case \\"end\\":
                      return _context7.stop();
                  }
                }
              });
            }());
            b = _dbux.resume(13, _awaitContextId5, function _callee5() {
              return regeneratorRuntime.async(function _callee5$(_context8) {
                while (1) {
                  switch (_context8.prev = _context8.next) {
                    case 0:
                      _context8.next = 2;
                      return regeneratorRuntime.awrap(_awaitContextId5 = _dbux.interrupt());

                    case 2:
                      return _context8.abrupt(\\"return\\", _context8.sent);

                    case 3:
                    case \\"end\\":
                      return _context8.stop();
                  }
                }
              });
            }());
            return _context9.abrupt(\\"return\\", a + b + af33(10));

          case 5:
            _context9.prev = 5;

            _dbux.popImmediate(_contextId7);

            return _context9.finish(5);

          case 8:
          case \\"end\\":
            return _context9.stop();
        }
      }
    }, null, null, [[1,, 5, 8]]);
  };

  (function main() {
    var _contextId8, _awaitContextId6;

    return regeneratorRuntime.async(function main$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            _contextId8 = _dbux.pushImmediate(14);

            try {
              console.log(_dbux.resume(15, _awaitContextId6, function _callee6() {
                return regeneratorRuntime.async(function _callee6$(_context10) {
                  while (1) {
                    switch (_context10.prev = _context10.next) {
                      case 0:
                        _context10.next = 2;
                        return regeneratorRuntime.awrap(_awaitContextId6 = _dbux.interrupt());

                      case 2:
                        return _context10.abrupt(\\"return\\", _context10.sent);

                      case 3:
                      case \\"end\\":
                        return _context10.stop();
                    }
                  }
                });
              }()));
              f0();
            } finally {
              _dbux.popImmediate(_contextId8);
            }

          case 2:
          case \\"end\\":
            return _context11.stop();
        }
      }
    });
  })();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"async-example1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/async-example1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 37,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f0\\",
      \\"displayName\\": \\"f0\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 4,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 6,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af1\\",
      \\"displayName\\": \\"af1\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 13,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af2\\",
      \\"displayName\\": \\"af2\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 9,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 9,
          \\"column\\": 14
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af1(1))\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 10,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 10,
          \\"column\\": 14
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af1(2))\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 12,
          \\"column\\": 13
        },
        \\"end\\": {
          \\"line\\": 12,
          \\"column\\": 25
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af1(3))\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 15,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af33\\",
      \\"displayName\\": \\"af33\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 8,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 16,
          \\"column\\": 21
        },
        \\"end\\": {
          \\"line\\": 18,
          \\"column\\": 3
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 10,
      \\"parent\\": 9,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 17,
          \\"column\\": 15
        },
        \\"end\\": {
          \\"line\\": 17,
          \\"column\\": 25
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(r.bind(33))\\"
    }, {
      \\"staticId\\": 11,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 21,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 26,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af44\\",
      \\"displayName\\": \\"af44\\"
    }, {
      \\"staticId\\": 12,
      \\"parent\\": 11,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 22,
          \\"column\\": 12
        },
        \\"end\\": {
          \\"line\\": 22,
          \\"column\\": 27
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af33(100))\\"
    }, {
      \\"staticId\\": 13,
      \\"parent\\": 11,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 23,
          \\"column\\": 12
        },
        \\"end\\": {
          \\"line\\": 23,
          \\"column\\": 26
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af33(50))\\"
    }, {
      \\"staticId\\": 14,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 28,
          \\"column\\": 1
        },
        \\"end\\": {
          \\"line\\": 37,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"main\\",
      \\"displayName\\": \\"main\\"
    }, {
      \\"staticId\\": 15,
      \\"parent\\": 14,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 30,
          \\"column\\": 4
        },
        \\"end\\": {
          \\"line\\": 33,
          \\"column\\": 6
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await Promise.all([af2(), a...)\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin async-example1.esNext.js: async-example1.esNext.js 1`] = `
"
function f0() {  
}

async function af1(a) {
  return Promise.resolve(a);
}

async function af2() {
  await af1(1);
  await af1(2);

  return 2 + await af1(3) - 3;
}

async function af33(delay) {
  return new Promise(r => {
    setTimeout(r.bind(33), delay);
  });
}

async function af44() {
  const a = await af33(100);
  const b = await af33(50);

  return a+b + af33(10);
}

(async function main() {
  console.log(
    await Promise.all([
      af2(),
      af44()
    ])
  );

  f0();
})();

      ↓ ↓ ↓ ↓ ↓ ↓

const _dbuxRuntime = require('dbux-runtime').default;

const _dbux = _dbux_init(_dbuxRuntime);

const _contextId = _dbux.getProgramContextId();

try {
  function f0() {
    const _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  }

  async function af1(a) {
    const _contextId3 = _dbux.pushImmediate(3);

    try {
      return Promise.resolve(a);
    } finally {
      _dbux.popImmediate(_contextId3);
    }
  }

  async function af2() {
    const _contextId4 = _dbux.pushImmediate(4);

    try {
      var _awaitContextId, _awaitContextId2, _awaitContextId3;

      _dbux.resume(5, _awaitContextId, (async () => await (_awaitContextId = _dbux.interrupt()))());

      _dbux.resume(6, _awaitContextId2, (async () => await (_awaitContextId2 = _dbux.interrupt()))());

      return 2 + _dbux.resume(7, _awaitContextId3, (async () => await (_awaitContextId3 = _dbux.interrupt()))()) - 3;
    } finally {
      _dbux.popImmediate(_contextId4);
    }
  }

  async function af33(delay) {
    const _contextId5 = _dbux.pushImmediate(8);

    try {
      return new Promise(r => {
        const _contextId6 = _dbux.pushImmediate(9);

        try {
          setTimeout(_dbux.scheduleCallback(10, _contextId6, r.bind(33)), delay);
        } finally {
          _dbux.popImmediate(_contextId6);
        }
      });
    } finally {
      _dbux.popImmediate(_contextId5);
    }
  }

  async function af44() {
    const _contextId7 = _dbux.pushImmediate(11);

    try {
      var _awaitContextId4, _awaitContextId5;

      const a = _dbux.resume(12, _awaitContextId4, (async () => await (_awaitContextId4 = _dbux.interrupt()))());

      const b = _dbux.resume(13, _awaitContextId5, (async () => await (_awaitContextId5 = _dbux.interrupt()))());

      return a + b + af33(10);
    } finally {
      _dbux.popImmediate(_contextId7);
    }
  }

  (async function main() {
    const _contextId8 = _dbux.pushImmediate(14);

    try {
      var _awaitContextId6;

      console.log(_dbux.resume(15, _awaitContextId6, (async () => await (_awaitContextId6 = _dbux.interrupt()))()));
      f0();
    } finally {
      _dbux.popImmediate(_contextId8);
    }
  })();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"async-example1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/async-example1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 37,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f0\\",
      \\"displayName\\": \\"f0\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 4,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 6,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af1\\",
      \\"displayName\\": \\"af1\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 13,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af2\\",
      \\"displayName\\": \\"af2\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 9,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 9,
          \\"column\\": 14
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af1(1))\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 10,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 10,
          \\"column\\": 14
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af1(2))\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 12,
          \\"column\\": 13
        },
        \\"end\\": {
          \\"line\\": 12,
          \\"column\\": 25
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af1(3))\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 15,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af33\\",
      \\"displayName\\": \\"af33\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 8,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 16,
          \\"column\\": 21
        },
        \\"end\\": {
          \\"line\\": 18,
          \\"column\\": 3
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 10,
      \\"parent\\": 9,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 17,
          \\"column\\": 15
        },
        \\"end\\": {
          \\"line\\": 17,
          \\"column\\": 25
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(r.bind(33))\\"
    }, {
      \\"staticId\\": 11,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 21,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 26,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"af44\\",
      \\"displayName\\": \\"af44\\"
    }, {
      \\"staticId\\": 12,
      \\"parent\\": 11,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 22,
          \\"column\\": 12
        },
        \\"end\\": {
          \\"line\\": 22,
          \\"column\\": 27
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af33(100))\\"
    }, {
      \\"staticId\\": 13,
      \\"parent\\": 11,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 23,
          \\"column\\": 12
        },
        \\"end\\": {
          \\"line\\": 23,
          \\"column\\": 26
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await af33(50))\\"
    }, {
      \\"staticId\\": 14,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 28,
          \\"column\\": 1
        },
        \\"end\\": {
          \\"line\\": 37,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"main\\",
      \\"displayName\\": \\"main\\"
    }, {
      \\"staticId\\": 15,
      \\"parent\\": 14,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 30,
          \\"column\\": 4
        },
        \\"end\\": {
          \\"line\\": 33,
          \\"column\\": 6
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await Promise.all([af2(), a...)\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin await1.es5.js: await1.es5.js 1`] = `
"
async function sleep(ms) {
  return new Promise(r => setTimeout(r, ms));
}

function f1() {
  return sleep(50);
}

async function f2() {
  await sleep(50);
}

async function f3() {
  await sleep(200);
}

async function f4(...args) {
  await Promise.all(...args);
}

(async function main() {
  await f1();
  await f4(f2, f3, sleep.bind(null, 400));
})();

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

require(\\"core-js/modules/es.object.to-string\\");

require(\\"core-js/modules/es.promise\\");

require(\\"core-js/modules/web.timers\\");

require(\\"regenerator-runtime/runtime\\");

var _dbuxRuntime = require('dbux-runtime')[\\"default\\"];

var _dbux = _dbux_init(_dbuxRuntime);

var _contextId = _dbux.getProgramContextId();

try {
  var sleep = function sleep(ms) {
    var _contextId2;

    return regeneratorRuntime.async(function sleep$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _contextId2 = _dbux.pushImmediate(2);
            _context.prev = 1;
            return _context.abrupt(\\"return\\", new Promise(function (r) {
              var _contextId3 = _dbux.pushImmediate(3);

              try {
                return setTimeout(_dbux.scheduleCallback(4, _contextId3, r), ms);
              } finally {
                _dbux.popImmediate(_contextId3);
              }
            }));

          case 3:
            _context.prev = 3;

            _dbux.popImmediate(_contextId2);

            return _context.finish(3);

          case 6:
          case \\"end\\":
            return _context.stop();
        }
      }
    }, null, null, [[1,, 3, 6]]);
  };

  var f1 = function f1() {
    var _contextId4 = _dbux.pushImmediate(5);

    try {
      return sleep(50);
    } finally {
      _dbux.popImmediate(_contextId4);
    }
  };

  var f2 = function f2() {
    var _contextId5, _awaitContextId;

    return regeneratorRuntime.async(function f2$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _contextId5 = _dbux.pushImmediate(6);

            try {
              _dbux.resume(7, _awaitContextId, function _callee() {
                return regeneratorRuntime.async(function _callee$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        _context2.next = 2;
                        return regeneratorRuntime.awrap(_awaitContextId = _dbux.interrupt());

                      case 2:
                        return _context2.abrupt(\\"return\\", _context2.sent);

                      case 3:
                      case \\"end\\":
                        return _context2.stop();
                    }
                  }
                });
              }());
            } finally {
              _dbux.popImmediate(_contextId5);
            }

          case 2:
          case \\"end\\":
            return _context3.stop();
        }
      }
    });
  };

  var f3 = function f3() {
    var _contextId6, _awaitContextId2;

    return regeneratorRuntime.async(function f3$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _contextId6 = _dbux.pushImmediate(8);

            try {
              _dbux.resume(9, _awaitContextId2, function _callee2() {
                return regeneratorRuntime.async(function _callee2$(_context4) {
                  while (1) {
                    switch (_context4.prev = _context4.next) {
                      case 0:
                        _context4.next = 2;
                        return regeneratorRuntime.awrap(_awaitContextId2 = _dbux.interrupt());

                      case 2:
                        return _context4.abrupt(\\"return\\", _context4.sent);

                      case 3:
                      case \\"end\\":
                        return _context4.stop();
                    }
                  }
                });
              }());
            } finally {
              _dbux.popImmediate(_contextId6);
            }

          case 2:
          case \\"end\\":
            return _context5.stop();
        }
      }
    });
  };

  var f4 = function f4() {
    var _contextId7, _awaitContextId3;

    return regeneratorRuntime.async(function f4$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _contextId7 = _dbux.pushImmediate(10);

            try {
              _dbux.resume(11, _awaitContextId3, function _callee3() {
                return regeneratorRuntime.async(function _callee3$(_context6) {
                  while (1) {
                    switch (_context6.prev = _context6.next) {
                      case 0:
                        _context6.next = 2;
                        return regeneratorRuntime.awrap(_awaitContextId3 = _dbux.interrupt());

                      case 2:
                        return _context6.abrupt(\\"return\\", _context6.sent);

                      case 3:
                      case \\"end\\":
                        return _context6.stop();
                    }
                  }
                });
              }());
            } finally {
              _dbux.popImmediate(_contextId7);
            }

          case 2:
          case \\"end\\":
            return _context7.stop();
        }
      }
    });
  };

  (function main() {
    var _contextId8, _awaitContextId4, _awaitContextId5;

    return regeneratorRuntime.async(function main$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _contextId8 = _dbux.pushImmediate(12);

            try {
              _dbux.resume(13, _awaitContextId4, function _callee4() {
                return regeneratorRuntime.async(function _callee4$(_context8) {
                  while (1) {
                    switch (_context8.prev = _context8.next) {
                      case 0:
                        _context8.next = 2;
                        return regeneratorRuntime.awrap(_awaitContextId4 = _dbux.interrupt());

                      case 2:
                        return _context8.abrupt(\\"return\\", _context8.sent);

                      case 3:
                      case \\"end\\":
                        return _context8.stop();
                    }
                  }
                });
              }());

              _dbux.resume(14, _awaitContextId5, function _callee5() {
                return regeneratorRuntime.async(function _callee5$(_context9) {
                  while (1) {
                    switch (_context9.prev = _context9.next) {
                      case 0:
                        _context9.next = 2;
                        return regeneratorRuntime.awrap(_awaitContextId5 = _dbux.interrupt());

                      case 2:
                        return _context9.abrupt(\\"return\\", _context9.sent);

                      case 3:
                      case \\"end\\":
                        return _context9.stop();
                    }
                  }
                });
              }());
            } finally {
              _dbux.popImmediate(_contextId8);
            }

          case 2:
          case \\"end\\":
            return _context10.stop();
        }
      }
    });
  })();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"await1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/await1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 24,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"sleep\\",
      \\"displayName\\": \\"sleep\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 2,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 21
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 43
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 3,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 37
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 38
        },
        \\"identifierName\\": \\"r\\"
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(r)\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 7,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 9,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 11,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 6,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 10,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 10,
          \\"column\\": 17
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await sleep(50))\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 13,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 15,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f3\\",
      \\"displayName\\": \\"f3\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 8,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 14,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 14,
          \\"column\\": 18
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await sleep(200))\\"
    }, {
      \\"staticId\\": 10,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 17,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f4\\",
      \\"displayName\\": \\"f4\\"
    }, {
      \\"staticId\\": 11,
      \\"parent\\": 10,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 18,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 18,
          \\"column\\": 28
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await Promise.all(...args))\\"
    }, {
      \\"staticId\\": 12,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 21,
          \\"column\\": 1
        },
        \\"end\\": {
          \\"line\\": 24,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"main\\",
      \\"displayName\\": \\"main\\"
    }, {
      \\"staticId\\": 13,
      \\"parent\\": 12,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 22,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 22,
          \\"column\\": 12
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await f1())\\"
    }, {
      \\"staticId\\": 14,
      \\"parent\\": 12,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 23,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 23,
          \\"column\\": 41
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await f4(f2, f3, sleep.bind...)\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin await1.esNext.js: await1.esNext.js 1`] = `
"
async function sleep(ms) {
  return new Promise(r => setTimeout(r, ms));
}

function f1() {
  return sleep(50);
}

async function f2() {
  await sleep(50);
}

async function f3() {
  await sleep(200);
}

async function f4(...args) {
  await Promise.all(...args);
}

(async function main() {
  await f1();
  await f4(f2, f3, sleep.bind(null, 400));
})();

      ↓ ↓ ↓ ↓ ↓ ↓

const _dbuxRuntime = require('dbux-runtime').default;

const _dbux = _dbux_init(_dbuxRuntime);

const _contextId = _dbux.getProgramContextId();

try {
  async function sleep(ms) {
    const _contextId2 = _dbux.pushImmediate(2);

    try {
      return new Promise(r => {
        const _contextId3 = _dbux.pushImmediate(3);

        try {
          return setTimeout(_dbux.scheduleCallback(4, _contextId3, r), ms);
        } finally {
          _dbux.popImmediate(_contextId3);
        }
      });
    } finally {
      _dbux.popImmediate(_contextId2);
    }
  }

  function f1() {
    const _contextId4 = _dbux.pushImmediate(5);

    try {
      return sleep(50);
    } finally {
      _dbux.popImmediate(_contextId4);
    }
  }

  async function f2() {
    const _contextId5 = _dbux.pushImmediate(6);

    try {
      var _awaitContextId;

      _dbux.resume(7, _awaitContextId, (async () => await (_awaitContextId = _dbux.interrupt()))());
    } finally {
      _dbux.popImmediate(_contextId5);
    }
  }

  async function f3() {
    const _contextId6 = _dbux.pushImmediate(8);

    try {
      var _awaitContextId2;

      _dbux.resume(9, _awaitContextId2, (async () => await (_awaitContextId2 = _dbux.interrupt()))());
    } finally {
      _dbux.popImmediate(_contextId6);
    }
  }

  async function f4(...args) {
    const _contextId7 = _dbux.pushImmediate(10);

    try {
      var _awaitContextId3;

      _dbux.resume(11, _awaitContextId3, (async () => await (_awaitContextId3 = _dbux.interrupt()))());
    } finally {
      _dbux.popImmediate(_contextId7);
    }
  }

  (async function main() {
    const _contextId8 = _dbux.pushImmediate(12);

    try {
      var _awaitContextId4, _awaitContextId5;

      _dbux.resume(13, _awaitContextId4, (async () => await (_awaitContextId4 = _dbux.interrupt()))());

      _dbux.resume(14, _awaitContextId5, (async () => await (_awaitContextId5 = _dbux.interrupt()))());
    } finally {
      _dbux.popImmediate(_contextId8);
    }
  })();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"await1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/await1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 24,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"sleep\\",
      \\"displayName\\": \\"sleep\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 2,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 21
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 43
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 3,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 37
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 38
        },
        \\"identifierName\\": \\"r\\"
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(r)\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 7,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 9,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 11,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 6,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 10,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 10,
          \\"column\\": 17
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await sleep(50))\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 13,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 15,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f3\\",
      \\"displayName\\": \\"f3\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 8,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 14,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 14,
          \\"column\\": 18
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await sleep(200))\\"
    }, {
      \\"staticId\\": 10,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 17,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f4\\",
      \\"displayName\\": \\"f4\\"
    }, {
      \\"staticId\\": 11,
      \\"parent\\": 10,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 18,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 18,
          \\"column\\": 28
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await Promise.all(...args))\\"
    }, {
      \\"staticId\\": 12,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 21,
          \\"column\\": 1
        },
        \\"end\\": {
          \\"line\\": 24,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"main\\",
      \\"displayName\\": \\"main\\"
    }, {
      \\"staticId\\": 13,
      \\"parent\\": 12,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 22,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 22,
          \\"column\\": 12
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await f1())\\"
    }, {
      \\"staticId\\": 14,
      \\"parent\\": 12,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 23,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 23,
          \\"column\\": 41
        }
      },
      \\"type\\": 4,
      \\"displayName\\": \\"(await f4(f2, f3, sleep.bind...)\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin example1.es5.js: example1.es5.js 1`] = `
"
function f1(x,y) {
}

class A {
  constructor() {
    this.m = new Map();
    this.s = new Set();
  }

  getX() {}
}

const f2 = (z,w) => {};

export {
  f1,
  A,
  f2
}

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

require(\\"core-js/modules/es.array.iterator\\");

require(\\"core-js/modules/es.map\\");

require(\\"core-js/modules/es.object.to-string\\");

require(\\"core-js/modules/es.set\\");

require(\\"core-js/modules/es.string.iterator\\");

require(\\"core-js/modules/web.dom-collections.iterator\\");

exports.__esModule = true;
exports.f2 = exports.A = exports.f1 = void 0;

var _dbuxRuntime = require('dbux-runtime')[\\"default\\"];

var _dbux = _dbux_init(_dbuxRuntime);

var _contextId = _dbux.getProgramContextId();

var _f, _A, _f2;

exports.f2 = _f2;
exports.A = _A;
exports.f1 = _f;

try {
  var f1 = function f1(x, y) {
    var _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  };

  var A =
  /*#__PURE__*/
  function () {
    function A() {
      var _contextId3 = _dbux.pushImmediate(3);

      try {
        this.m = new Map();
        this.s = new Set();
      } finally {
        _dbux.popImmediate(_contextId3);
      }
    }

    var _proto = A.prototype;

    _proto.getX = function getX() {
      var _contextId4 = _dbux.pushImmediate(4);

      try {} finally {
        _dbux.popImmediate(_contextId4);
      }
    };

    return A;
  }();

  var f2 = function f2(z, w) {
    var _contextId5 = _dbux.pushImmediate(5);

    try {} finally {
      _dbux.popImmediate(_contextId5);
    }
  };

  exports.f1 = _f = f1;
  exports.A = _A = A;
  exports.f2 = _f2 = f2;
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"example1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/example1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 1
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 3
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"constructor\\",
      \\"displayName\\": \\"A.constructor\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 10,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 10,
          \\"column\\": 11
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"getX\\",
      \\"displayName\\": \\"A.getX\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 13,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 13,
          \\"column\\": 22
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin example1.esNext.js: example1.esNext.js 1`] = `
"
function f1(x,y) {
}

class A {
  constructor() {
    this.m = new Map();
    this.s = new Set();
  }

  getX() {}
}

const f2 = (z,w) => {};

export {
  f1,
  A,
  f2
}

      ↓ ↓ ↓ ↓ ↓ ↓

const _dbuxRuntime = require('dbux-runtime').default;

const _dbux = _dbux_init(_dbuxRuntime);

const _contextId = _dbux.getProgramContextId();

let _f, _A, _f2;

try {
  function f1(x, y) {
    const _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  }

  class A {
    constructor() {
      const _contextId3 = _dbux.pushImmediate(3);

      try {
        this.m = new Map();
        this.s = new Set();
      } finally {
        _dbux.popImmediate(_contextId3);
      }
    }

    getX() {
      const _contextId4 = _dbux.pushImmediate(4);

      try {} finally {
        _dbux.popImmediate(_contextId4);
      }
    }

  }

  const f2 = (z, w) => {
    const _contextId5 = _dbux.pushImmediate(5);

    try {} finally {
      _dbux.popImmediate(_contextId5);
    }
  };

  _f = f1;
  _A = A;
  _f2 = f2;
} finally {
  _dbux.popProgram();
}

export { _f as f1, _A as A, _f2 as f2 };

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"example1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/example1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 19,
          \\"column\\": 1
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 2,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 3
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"constructor\\",
      \\"displayName\\": \\"A.constructor\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 10,
          \\"column\\": 2
        },
        \\"end\\": {
          \\"line\\": 10,
          \\"column\\": 11
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"getX\\",
      \\"displayName\\": \\"A.getX\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 13,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 13,
          \\"column\\": 22
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin example2.es5.js: example2.es5.js 1`] = `
"
import { A } from './example1';

(function main() {
  console.log(new A());
})();

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _example = require(\\"./example1\\");

var _dbuxRuntime = require('dbux-runtime')[\\"default\\"];

var _dbux = _dbux_init(_dbuxRuntime);

var _contextId = _dbux.getProgramContextId();

try {
  (function main() {
    var _contextId2 = _dbux.pushImmediate(2);

    try {
      console.log(new _example.A());
    } finally {
      _dbux.popImmediate(_contextId2);
    }
  })();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"example2.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/example2.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 5,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 3,
          \\"column\\": 1
        },
        \\"end\\": {
          \\"line\\": 5,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"main\\",
      \\"displayName\\": \\"main\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin example2.esNext.js: example2.esNext.js 1`] = `
"
import { A } from './example1';

(function main() {
  console.log(new A());
})();

      ↓ ↓ ↓ ↓ ↓ ↓

import { A } from './example1';

const _dbuxRuntime = require('dbux-runtime').default;

const _dbux = _dbux_init(_dbuxRuntime);

const _contextId = _dbux.getProgramContextId();

try {
  (function main() {
    const _contextId2 = _dbux.pushImmediate(2);

    try {
      console.log(new A());
    } finally {
      _dbux.popImmediate(_contextId2);
    }
  })();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"example2.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/example2.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 5,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 3,
          \\"column\\": 1
        },
        \\"end\\": {
          \\"line\\": 5,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"main\\",
      \\"displayName\\": \\"main\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin example3.es5.js: example3.es5.js 1`] = `
"
function f1() {

}

function f2() {
  f1();
  f1();
}


f2();

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _dbuxRuntime = require('dbux-runtime')[\\"default\\"];

var _dbux = _dbux_init(_dbuxRuntime);

var _contextId = _dbux.getProgramContextId();

try {
  var f1 = function f1() {
    var _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  };

  var f2 = function f2() {
    var _contextId3 = _dbux.pushImmediate(3);

    try {
      f1();
      f1();
    } finally {
      _dbux.popImmediate(_contextId3);
    }
  };

  f2();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"example3.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/example3.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 11,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin example3.esNext.js: example3.esNext.js 1`] = `
"
function f1() {

}

function f2() {
  f1();
  f1();
}


f2();

      ↓ ↓ ↓ ↓ ↓ ↓

const _dbuxRuntime = require('dbux-runtime').default;

const _dbux = _dbux_init(_dbuxRuntime);

const _contextId = _dbux.getProgramContextId();

try {
  function f1() {
    const _contextId2 = _dbux.pushImmediate(2);

    try {} finally {
      _dbux.popImmediate(_contextId2);
    }
  }

  function f2() {
    const _contextId3 = _dbux.pushImmediate(3);

    try {
      f1();
      f1();
    } finally {
      _dbux.popImmediate(_contextId3);
    }
  }

  f2();
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"example3.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/example3.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 11,
          \\"column\\": 5
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 5,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin setTimeout1.es5.js: setTimeout1.es5.js 1`] = `
"
function f1(a, b) {
  setTimeout(function f2() {
    setTimeout(f3, 300);
  });
}

function f3() {
  f4(1, (...args) => console.log(...args), 2, () => {});
}

function f4(a, cb, b, cb2) {
  cb(a, b);
  cb2();
}

// go!
setTimeout(f1.bind(null, 83, 84));

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

require(\\"core-js/modules/es.function.bind\\");

require(\\"core-js/modules/web.timers\\");

var _dbuxRuntime = require('dbux-runtime')[\\"default\\"];

var _dbux = _dbux_init(_dbuxRuntime);

var _contextId = _dbux.getProgramContextId();

try {
  var f1 = function f1(a, b) {
    var _contextId2 = _dbux.pushImmediate(2);

    try {
      setTimeout(_dbux.scheduleCallback(3, _contextId2, function f2() {
        var _contextId3 = _dbux.pushImmediate(4);

        try {
          setTimeout(_dbux.scheduleCallback(5, _contextId3, f3), 300);
        } finally {
          _dbux.popImmediate(_contextId3);
        }
      }));
    } finally {
      _dbux.popImmediate(_contextId2);
    }
  };

  var f3 = function f3() {
    var _contextId4 = _dbux.pushImmediate(6);

    try {
      f4(1, _dbux.scheduleCallback(7, _contextId4, function () {
        var _contextId5 = _dbux.pushImmediate(9);

        try {
          var _console;

          return (_console = console).log.apply(_console, arguments);
        } finally {
          _dbux.popImmediate(_contextId5);
        }
      }), 2, _dbux.scheduleCallback(8, _contextId4, function () {
        var _contextId6 = _dbux.pushImmediate(10);

        try {} finally {
          _dbux.popImmediate(_contextId6);
        }
      }));
    } finally {
      _dbux.popImmediate(_contextId4);
    }
  };

  var f4 = function f4(a, cb, b, cb2) {
    var _contextId7 = _dbux.pushImmediate(11);

    try {
      cb(a, b);
      cb2();
    } finally {
      _dbux.popImmediate(_contextId7);
    }
  }; // go!


  setTimeout(_dbux.scheduleCallback(12, _contextId, f1.bind(null, 83, 84)));
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"setTimeout1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/setTimeout1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 17,
          \\"column\\": 34
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 5,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 2,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 13
        },
        \\"end\\": {
          \\"line\\": 4,
          \\"column\\": 3
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(function f2() {  setTimeou...)\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 3,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 13
        },
        \\"end\\": {
          \\"line\\": 4,
          \\"column\\": 3
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 3,
          \\"column\\": 15
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 17
        },
        \\"identifierName\\": \\"f3\\"
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(f3)\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 7,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 9,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f3\\",
      \\"displayName\\": \\"f3\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 6,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 8
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 41
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"((...args) => console.log(.....)\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 6,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 46
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 54
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(() => {})\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 7,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 8
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 41
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 10,
      \\"parent\\": 8,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 46
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 54
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 11,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 11,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 14,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f4\\",
      \\"displayName\\": \\"f4\\"
    }, {
      \\"staticId\\": 12,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 17,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 17,
          \\"column\\": 32
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(f1.bind(null, 83, 84))\\"
    }]
  });
}
"
`;

exports[`dbux-babel-plugin setTimeout1.esNext.js: setTimeout1.esNext.js 1`] = `
"
function f1(a, b) {
  setTimeout(function f2() {
    setTimeout(f3, 300);
  });
}

function f3() {
  f4(1, (...args) => console.log(...args), 2, () => {});
}

function f4(a, cb, b, cb2) {
  cb(a, b);
  cb2();
}

// go!
setTimeout(f1.bind(null, 83, 84));

      ↓ ↓ ↓ ↓ ↓ ↓

const _dbuxRuntime = require('dbux-runtime').default;

const _dbux = _dbux_init(_dbuxRuntime);

const _contextId = _dbux.getProgramContextId();

try {
  function f1(a, b) {
    const _contextId2 = _dbux.pushImmediate(2);

    try {
      setTimeout(_dbux.scheduleCallback(3, _contextId2, function f2() {
        const _contextId3 = _dbux.pushImmediate(4);

        try {
          setTimeout(_dbux.scheduleCallback(5, _contextId3, f3), 300);
        } finally {
          _dbux.popImmediate(_contextId3);
        }
      }));
    } finally {
      _dbux.popImmediate(_contextId2);
    }
  }

  function f3() {
    const _contextId4 = _dbux.pushImmediate(6);

    try {
      f4(1, _dbux.scheduleCallback(7, _contextId4, (...args) => {
        const _contextId5 = _dbux.pushImmediate(9);

        try {
          return console.log(...args);
        } finally {
          _dbux.popImmediate(_contextId5);
        }
      }), 2, _dbux.scheduleCallback(8, _contextId4, () => {
        const _contextId6 = _dbux.pushImmediate(10);

        try {} finally {
          _dbux.popImmediate(_contextId6);
        }
      }));
    } finally {
      _dbux.popImmediate(_contextId4);
    }
  }

  function f4(a, cb, b, cb2) {
    const _contextId7 = _dbux.pushImmediate(11);

    try {
      cb(a, b);
      cb2();
    } finally {
      _dbux.popImmediate(_contextId7);
    }
  } // go!


  setTimeout(_dbux.scheduleCallback(12, _contextId, f1.bind(null, 83, 84)));
} finally {
  _dbux.popProgram();
}

function _dbux_init(dbuxRuntime) {
  return dbuxRuntime.initProgram({
    \\"fileName\\": \\"setTimeout1.js\\",
    \\"filePath\\": \\"samples/__samplesInput__/setTimeout1.js\\",
    \\"staticContexts\\": [null, {
      \\"staticId\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 17,
          \\"column\\": 34
        }
      },
      \\"type\\": 1,
      \\"name\\": \\"Program\\",
      \\"displayName\\": \\"Program\\"
    }, {
      \\"staticId\\": 2,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 1,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 5,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f1\\",
      \\"displayName\\": \\"f1\\"
    }, {
      \\"staticId\\": 3,
      \\"parent\\": 2,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 13
        },
        \\"end\\": {
          \\"line\\": 4,
          \\"column\\": 3
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(function f2() {  setTimeou...)\\"
    }, {
      \\"staticId\\": 4,
      \\"parent\\": 3,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 2,
          \\"column\\": 13
        },
        \\"end\\": {
          \\"line\\": 4,
          \\"column\\": 3
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f2\\",
      \\"displayName\\": \\"f2\\"
    }, {
      \\"staticId\\": 5,
      \\"parent\\": 4,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 3,
          \\"column\\": 15
        },
        \\"end\\": {
          \\"line\\": 3,
          \\"column\\": 17
        },
        \\"identifierName\\": \\"f3\\"
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(f3)\\"
    }, {
      \\"staticId\\": 6,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 7,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 9,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f3\\",
      \\"displayName\\": \\"f3\\"
    }, {
      \\"staticId\\": 7,
      \\"parent\\": 6,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 8
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 41
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"((...args) => console.log(.....)\\"
    }, {
      \\"staticId\\": 8,
      \\"parent\\": 6,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 46
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 54
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(() => {})\\"
    }, {
      \\"staticId\\": 9,
      \\"parent\\": 7,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 8
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 41
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 10,
      \\"parent\\": 8,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 8,
          \\"column\\": 46
        },
        \\"end\\": {
          \\"line\\": 8,
          \\"column\\": 54
        }
      },
      \\"type\\": 2,
      \\"displayName\\": \\"(anonymous)\\"
    }, {
      \\"staticId\\": 11,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 11,
          \\"column\\": 0
        },
        \\"end\\": {
          \\"line\\": 14,
          \\"column\\": 1
        }
      },
      \\"type\\": 2,
      \\"name\\": \\"f4\\",
      \\"displayName\\": \\"f4\\"
    }, {
      \\"staticId\\": 12,
      \\"parent\\": 1,
      \\"loc\\": {
        \\"start\\": {
          \\"line\\": 17,
          \\"column\\": 11
        },
        \\"end\\": {
          \\"line\\": 17,
          \\"column\\": 32
        }
      },
      \\"type\\": 3,
      \\"displayName\\": \\"(f1.bind(null, 83, 84))\\"
    }]
  });
}
"
`;
