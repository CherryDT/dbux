"use strict";(self.webpackChunkdbux_docs=self.webpackChunkdbux_docs||[]).push([[237],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,h=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(h,a(a({ref:t},s),{},{components:n})):r.createElement(h,a({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3755:function(e,t,n){n.d(t,{Z:function(){return u}});var r=n(7462),i=n(3366),o=n(7294),a=["path","children","title"],l={"dbux-code":"Dbux VSCode Extension"};function u(e){var t=e.path,n=e.children,u=e.title,c=(0,i.Z)(e,a);if(!t)throw new Error('invalid <CodeLink /> missing "path". - props: '+JSON.stringify(e,null,2));var s=function(e){return l[e]||(e.startsWith("dbux-")&&!e.startsWith("dbux-code")?"@dbux/"+e.substring(5):e)}(t);n=n||s,u=u||n;var d="https://github.com/Domiii/dbux/"+t;return o.createElement("a",(0,r.Z)({title:u,href:d},c),n)}},633:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(7462),i=n(3366),o=n(7294),a=n(5350),l=n(8767);var u=["src","title","zoomable","darkLight"];function c(e){var t=e.src,n=e.title,c=e.zoomable,s=e.darkLight,d=(0,i.Z)(e,u),p=function(e){var t=e.src,n=e.darkLight,r=(0,a.Z)().isDarkTheme;return(0,l.Z)()+(n?r?"dark/":"light/":"")+t}({src:t,darkLight:s}),m=c?"zoomable":"",h=n=n||t;return o.createElement("img",(0,r.Z)({className:m,src:p,alt:h,title:n},d))}},8767:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(2263);function i(){return(0,r.Z)().siteConfig.baseUrl}},3693:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return h}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=n(633),l=n(3755),u=["components"],c={slug:"/tools-and-configuration"},s="Architecture Overview",d={unversionedId:"tools-and-configuration/architecture-overview",id:"tools-and-configuration/architecture-overview",title:"Architecture Overview",description:"The Dbux monorepo includes the following modules:",source:"@site/content/04-tools-and-configuration/00-architecture-overview.mdx",sourceDirName:"04-tools-and-configuration",slug:"/tools-and-configuration",permalink:"/dbux/tools-and-configuration",editUrl:"https://github.com/Domiii/dbux/blob/master/docs/content/content/04-tools-and-configuration/00-architecture-overview.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{slug:"/tools-and-configuration"},sidebar:"tutorialSidebar",previous:{title:"Next Steps",permalink:"/dbux/dbux-practice/next-steps"},next:{title:"Dbux VSCode Extension",permalink:"/dbux/tools-and-configuration/dbux-code"}},p=[{value:"Utilities and Libraries",id:"utilities-and-libraries",children:[],level:2},{value:"Which files are traced?",id:"which-files-are-traced",children:[],level:2}],m={toc:p};function h(e){var t=e.components,n=(0,i.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"architecture-overview"},"Architecture Overview"),(0,o.kt)(a.Z,{darkLight:!1,src:"architecture-v001.png",mdxType:"Img"}),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Domiii/dbux"},"Dbux monorepo")," includes the following modules:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"dbux-babel-plugin",mdxType:"CodeLink"})," instruments and injects ",(0,o.kt)(l.Z,{path:"dbux-runtime",mdxType:"CodeLink"})," into a given js program when supplied as a `plugin` to Babel."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"@dbux/runtime",mdxType:"CodeLink"})," When an instrumented program runs, this module is responsible for recording and sending runtime data to the `@dbux/data` module, running on a receiving server (using `socket-io.client`). [The Dbux VSCode Extension](./tools-and-configuration/dbux-code) hosts such a server."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"@dbux/cli",mdxType:"CodeLink"})," The cli (command-line interface) allows us to easily run a js program while instrumenting it on the fly using [@babel/register](https://babeljs.io/docs/en/babel-register)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"@dbux/graph-common",mdxType:"CodeLink"}),", ",(0,o.kt)(l.Z,{path:"@dbux/graph-client",mdxType:"CodeLink"})," and ",(0,o.kt)(l.Z,{path:"@dbux/graph-host",mdxType:"CodeLink"}),' Are responsible for rendering and letting the user interact with the "Call Graph" through an HTML GUI.')),(0,o.kt)("h2",{id:"utilities-and-libraries"},"Utilities and Libraries"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"@dbux/common",mdxType:"CodeLink"})," Collection of commonly used utilities shared among (more or less) all other modules."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"@dbux/common-node",mdxType:"CodeLink"})," Collection of commonly used utilities shared among (more or less) all node-only modules."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"@dbux/data",mdxType:"CodeLink"})," Receives, pre-processes and manages all data sent by `@dbux/runtime`. It allows us to query and analyze JS runtime data on a higher level."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./tools-and-configuration/dbux-code"},(0,o.kt)("inlineCode",{parentName:"a"},"dbux-code"))," The Dbux VSCode extension (",(0,o.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=Domi.dbux-code"},"VSCode marketplace link"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)(l.Z,{path:"@dbux/projects",mdxType:"CodeLink"})," Used by `dbux-code` as part of [Dbux Practice](../dbux-practice) (but does not depend on `VSCode`). It is used to organize real-world projects, their bugs and practice exercises.")),(0,o.kt)("h2",{id:"which-files-are-traced"},"Which files are traced?"),(0,o.kt)("p",null,"TODO: give this its own section TODO(name = ?, location = ?)\nTODO(re-write: build-time vs. run-time performance considerations etc.)"),(0,o.kt)("p",null,"When running Dbux, it is a balancing act to determine the optimal set of files to trace. Often times it is easiest to tell Dbux to just trace everything. However, tracing ",(0,o.kt)("em",{parentName:"p"},"everything")," can slow down the build process significantly. "),(0,o.kt)("p",null,"Also, tracing long-running loops or high-FPS code TODO(explain). That is why you want to fine-tune configuration as to what and how you want to trace. We currently offer several configuration options to that end in ",(0,o.kt)(l.Z,{path:"dbux-babel-plugin/src/external/moduleFilter.js",mdxType:"CodeLink"}),", such as ",(0,o.kt)("inlineCode",{parentName:"p"},"packageWhitelist"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"packageBlacklist"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"fileWhitelist")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"fileBlacklist"),"."),(0,o.kt)("p",null,"We hope to provide better and more adaptive tracing for this ",(0,o.kt)("a",{parentName:"p",href:"./advanced/future-work"},"in the future"),"."))}h.isMDXComponent=!0}}]);