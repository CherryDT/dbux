"use strict";(self.webpackChunkdbux_docs=self.webpackChunkdbux_docs||[]).push([[851],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(t),m=i,f=c["".concat(u,".").concat(m)]||c[m]||d[m]||l;return t?a.createElement(f,r(r({ref:n},s),{},{components:t})):a.createElement(f,r({ref:n},s))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=c;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5002:function(e,n,t){t.d(n,{Z:function(){return p}});var a=t(7462),i=t(3366),l=t(7294),r=t(3616),o=["toc","className","linkClassName","linkActiveClassName","minHeadingLevel","maxHeadingLevel"];function u(e){var n=e.toc,t=e.className,a=e.linkClassName,i=e.isChild;return n.length?l.createElement("ul",{className:i?void 0:t},n.map((function(e){return l.createElement("li",{key:e.id},l.createElement("a",{href:"#"+e.id,className:null!=a?a:void 0,dangerouslySetInnerHTML:{__html:e.value}}),l.createElement(u,{isChild:!0,toc:e.children,className:t,linkClassName:a}))}))):null}function p(e){var n=e.toc,t=e.className,p=void 0===t?"table-of-contents table-of-contents__left-border":t,s=e.linkClassName,d=void 0===s?"table-of-contents__link":s,c=e.linkActiveClassName,m=void 0===c?void 0:c,f=e.minHeadingLevel,k=e.maxHeadingLevel,b=(0,i.Z)(e,o),h=(0,r.LU)(),g=null!=f?f:h.tableOfContents.minHeadingLevel,N=null!=k?k:h.tableOfContents.maxHeadingLevel,x=(0,r.DA)({toc:n,minHeadingLevel:g,maxHeadingLevel:N}),v=(0,l.useMemo)((function(){if(d&&m)return{linkClassName:d,linkActiveClassName:m,minHeadingLevel:g,maxHeadingLevel:N}}),[d,m,g,N]);return(0,r.Si)(v),l.createElement(u,(0,a.Z)({toc:x,className:p,linkClassName:d},b))}},3755:function(e,n,t){t.d(n,{Z:function(){return u}});var a=t(7462),i=t(3366),l=t(7294),r=["path","children","title"],o={"dbux-code":"Dbux VSCode Extension"};function u(e){var n=e.path,t=e.children,u=e.title,p=(0,i.Z)(e,r);if(!n)throw new Error('invalid <CodeLink /> missing "path". - props: '+JSON.stringify(e,null,2));var s=function(e){return o[e]||(e.startsWith("dbux-")&&!e.startsWith("dbux-code")?"@dbux/"+e.substring(5):e)}(n);t=t||s,u=u||t;var d="https://github.com/Domiii/dbux/tree/master/"+n;return l.createElement("a",(0,a.Z)({title:u,href:d},p),t)}},8640:function(e,n,t){t.d(n,{Z:function(){return u}});var a=t(7294),i="tableOfContentsInline_0DDH",l=t(5002);var r=function(e){var n=e.toc,t=e.minHeadingLevel,r=e.maxHeadingLevel;return a.createElement("div",{className:i},a.createElement(l.Z,{toc:n,minHeadingLevel:t,maxHeadingLevel:r,className:"table-of-contents",linkClassName:null}))},o={display:"none"};function u(e){var n=e.toc;return a.createElement("div",{style:o},a.createElement(r,{toc:n}))}},6777:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return f}});var a=t(7462),i=t(3366),l=(t(7294),t(3905)),r=t(3755),o=t(8640),u=["components"],p={},s="Which Files are Traced?",d={unversionedId:"guides/which-files-are-traced",id:"guides/which-files-are-traced",title:"Which Files are Traced?",description:"This article explains Dbux determines which files to record.",source:"@site/content/guides/01-which-files-are-traced.mdx",sourceDirName:"guides",slug:"/guides/which-files-are-traced",permalink:"/dbux/guides/which-files-are-traced",editUrl:"https://github.com/Domiii/dbux/blob/master/docs/content/guides/01-which-files-are-traced.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Next Steps",permalink:"/dbux/dbux-practice/next-steps"},next:{title:"Build Pipeline Integration",permalink:"/dbux/guides/build-pipeline-integration"}},c=[{value:"Example",id:"example",children:[],level:3},{value:"Run Button + @dbux/cli",id:"run-button--dbuxcli",children:[],level:2},{value:"Babel Config",id:"babel-config",children:[{value:"Webpack Example:",id:"webpack-example",children:[],level:3},{value:"Rollup Example",id:"rollup-example",children:[],level:3}],level:2}],m={toc:c};function f(e){var n=e.components,t=(0,i.Z)(e,u);return(0,l.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"which-files-are-traced"},"Which Files are Traced?"),(0,l.kt)(o.Z,{toc:c,mdxType:"TOC"}),(0,l.kt)("p",null,"This article explains Dbux determines which files to record."),(0,l.kt)("p",null,"When ",(0,l.kt)("a",{parentName:"p",href:"/dbux/using-dbux/"},"Dbux is enabled"),", it automatically records execution of all files that are not in ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules"),(0,l.kt)("sup",{parentName:"p",id:"fnref-1"},(0,l.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),". It is a balancing act to determine the optimal set of files to trace. Often times it is easiest to tell Dbux to just trace everything. However, tracing ",(0,l.kt)("em",{parentName:"p"},"everything")," can slow down the build/parse time significantly."),(0,l.kt)("p",null,"Dbux currently offers several configuration options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"packageWhitelist")," (",(0,l.kt)("inlineCode",{parentName:"p"},"pw"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"packageBlacklist")," (",(0,l.kt)("inlineCode",{parentName:"p"},"pb"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"fileWhitelist")," (",(0,l.kt)("inlineCode",{parentName:"p"},"fw"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"fileBlacklist")," (",(0,l.kt)("inlineCode",{parentName:"p"},"fb"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"-> These settings are in ",(0,l.kt)(r.Z,{path:"dbux-babel-plugin/src/external/moduleFilter.js",mdxType:"CodeLink"}),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"-> ",(0,l.kt)("inlineCode",{parentName:"p"},"packageName")," is determined via ",(0,l.kt)(r.Z,{path:"dbux-common-node/src/util/moduleUtil.js",mdxType:"CodeLink"},(0,l.kt)("code",null,"parsePackageName"))),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"NOTE: ",(0,l.kt)("inlineCode",{parentName:"li"},"packageName")," support namespaces."),(0,l.kt)("li",{parentName:"ul"},"Examples of ",(0,l.kt)("inlineCode",{parentName:"li"},"packageName")," detection for different module paths:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/pre/node_modules/a")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"a")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/pre/node_modules/a/b/c.js")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"a")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/pre/node_modules/a/b/node_modules/c/d")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/pre/node_modules/@a/b/c.js")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"@a/b"))))))),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const moduleFilterOptions = {\n  packageWhitelist: 'interestingPackage1,@interesting/package2',\n  // packageBlacklist: '',\n  fileBlacklist: '.*bad_file1\\.js,.*/unwanted_dir1/.*'\n};\n")),(0,l.kt)("p",null,"TODO: more explanations + examples"),(0,l.kt)("h2",{id:"run-button--dbuxcli"},"Run Button + @dbux/cli"),(0,l.kt)("p",null,"When using ",(0,l.kt)("a",{parentName:"p",href:"/dbux/using-dbux/the-run-button"},"the Run Button")," and/or ",(0,l.kt)("a",{parentName:"p",href:"/dbux/tools-and-configuration/dbux-cli"},"@dbux/cli"),", you can configure this via the ",(0,l.kt)("inlineCode",{parentName:"p"},"--pw"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--pb"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--fw")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"--fb")," flags."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example: ",(0,l.kt)("inlineCode",{parentName:"li"},"npx dbux run --pb=lodash ./test.js"))),(0,l.kt)("h2",{id:"babel-config"},"Babel Config"),(0,l.kt)("p",null,"When ",(0,l.kt)("a",{parentName:"p",href:"/dbux/guides/build-pipeline-integration"},"manually integrating Dbux into your build pipeline"),", you generally want to make use of the ",(0,l.kt)("inlineCode",{parentName:"p"},"moduleFilter")," tools (",(0,l.kt)(r.Z,{path:"dbux-babel-plugin/src/external",mdxType:"CodeLink"}),") in your config file and manually adjust your global Babel ",(0,l.kt)("inlineCode",{parentName:"p"},"include")," ",(0,l.kt)("strong",{parentName:"p"},"or")," ",(0,l.kt)("inlineCode",{parentName:"p"},"ignore")," settings to make sure that you are tracing and recording the files that you want."),(0,l.kt)("p",null,"NOTE: These tools return ",(0,l.kt)("inlineCode",{parentName:"p"},"function")," (not ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"RegExp"),")."),(0,l.kt)("h3",{id:"webpack-example"},"Webpack Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const shouldInclude = require('@dbux/babel-plugin/dist/include').default;\n\n// ...\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      // ...\n      {\n        test: /\\.jsx?$/,\n        include: [\n          shouldInclude(moduleFilterOptions)\n        ],\n        use: {\n          loader: 'babel-loader',\n          options: {\n            plugins: [\n              // other plugins, running **after** Dbux...\n              '@dbux/babel-plugin'\n              // other plugins, running **before** Dbux...\n            ]\n          }\n        }\n      }\n    ]\n  }\n};\n")),(0,l.kt)("h3",{id:"rollup-example"},"Rollup Example"),(0,l.kt)("p",null,"TODO: We have not tested this in a while. Need to verify and set it in stone. Test with the previously working ",(0,l.kt)("inlineCode",{parentName:"p"},"Chart.js")," practice exercises (which uses Rollup)."),(0,l.kt)("p",null,"Rollup requires use of ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@rollup/plugin-babel"},"@rollup/plugin-babel"),"."),(0,l.kt)("p",null,"Something like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const shouldInclude = require('@dbux/babel-plugin/dist/include').default;\n\nconst config = {\n  ...\n  plugins: [\n    babel({\n      babelHelpers: 'inline',\n      filter: shouldInclude(moduleFilterOptions),\n      /**\n       * WARNING: if not skipped, we saw some serious memory leaks (in 2020), \n       *    but should already be fixed on the Dbux side.\n       * TODO: we need to test this again.\n       */\n      skipPreflightCheck: true\n    })\n  ]\n};\n")),(0,l.kt)("div",{className:"footnotes"},(0,l.kt)("hr",{parentName:"div"}),(0,l.kt)("ol",{parentName:"div"},(0,l.kt)("li",{parentName:"ol",id:"fn-1"},"Support for PnP and other module systems are ",(0,l.kt)("a",{parentName:"li",href:"/dbux/advanced/future-work"},"pending"),".",(0,l.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}f.isMDXComponent=!0}}]);