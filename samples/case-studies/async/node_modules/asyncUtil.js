/** ###########################################################################
 * Common
 *  #########################################################################*/

/**
 * Randomly generate integer in {0, 1, ..., n - 1}
 */
export function randomInt(n) {
  return Math.floor(Math.random() * n);
}

/** ###########################################################################
 * Async
 *  #########################################################################*/

export async function waitTicksAsync(t) {
  await repeatAsync(t)
}

export async function repeatAsync(t, f = async () => { }) {
  while (--t >= 0) {
    await f();
  }
}

/** ###########################################################################
 * Promise
 *  #########################################################################*/

export function waitTicksPromise(t) {
  return repeatPromise(t);
}

export function repeatPromise(t, f = () => { }) {
  let p = Promise.resolve();
  while (--t >= 0) {
    p = p.then(f);
  }
  return p;
}