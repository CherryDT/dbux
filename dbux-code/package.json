{
  "name": "dbux-code",
  "private": true,
  "displayName": "Dbux (ALPHA)",
  "version": "0.2.1-dev.0",
  "publisher": "Domi",
  "description": "",
  "repository": {
    "type": "git",
    "url": "https://github.com/Domiii/dbux"
  },
  "engines": {
    "vscode": "^1.46.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "__main": "./src/index.js",
  "main": "./dist/bundle.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dbuxViewContainer",
          "title": "Dbux",
          "icon": "resources/bug.svg"
        }
      ]
    },
    "views": {
      "dbuxViewContainer": [
        {
          "id": "dbuxApplicationsView",
          "name": "Applications"
        },
        {
          "id": "dbuxTraceDetailsView",
          "name": "Trace Details"
        },
        {
          "id": "dbuxProjectView",
          "name": "Practice",
          "when": "dbux.context.showProjectView == true"
        }
      ]
    },
    "commands": [
      {
        "command": "dbux.cancelBugRunner",
        "title": "Dbux Practice: Cancel All"
      },
      {
        "command": "dbux.exportApplicationData",
        "title": "Dbux: Export Application Data"
      },
      {
        "command": "dbux.showDecorations",
        "title": "Dbux: Show Code Decorations"
      },
      {
        "command": "dbux.hideDecorations",
        "title": "Dbux: Hide Code Decorations"
      },
      {
        "command": "dbux.toggleNavButton",
        "title": "Dbux: Toggle Editor Buttons"
      },
      {
        "command": "dbux.toggleErrorLog",
        "title": "Dbux: Toggle Error Notifications"
      },
      {
        "command": "dbux.selectTrace",
        "title": "Dbux: Select Trace by id"
      },
      {
        "command": "dbux.togglePracticeView",
        "title": "Dbux: Toggle Practice View",
        "icon": {
          "light": "resources/light/project.svg",
          "dark": "resources/dark/project.svg"
        }
      },
      {
        "command": "dbux.runFile",
        "title": "Dbux: Run current file",
        "icon": {
          "light": "resources/light/play.svg",
          "dark": "resources/dark/play.svg"
        }
      },
      {
        "command": "dbux.debugFile",
        "title": "Dbux: Debug current file",
        "icon": {
          "light": "resources/light/bug.svg",
          "dark": "resources/dark/bug.svg"
        }
      },
      {
        "command": "dbux.showGraphView",
        "title": "Dbux: Show Call Graph",
        "icon": {
          "light": "resources/light/tree.svg",
          "dark": "resources/dark/tree.svg"
        }
      },
      {
        "command": "dbux.hideGraphView",
        "title": "Dbux: Hide Call Graph",
        "icon": {
          "light": "resources/light/tree_disabled.svg",
          "dark": "resources/dark/tree_disabled.svg"
        }
      },
      {
        "command": "dbux.startRuntimeServer",
        "title": "Dbux: Start Dbux Runtime Server",
        "icon": {
          "light": "resources/light/antenna_red.svg",
          "dark": "resources/dark/antenna_red.svg"
        }
      },
      {
        "command": "dbux.stopRuntimeServer",
        "title": "Dbux: Stop Dbux Runtime Server",
        "icon": {
          "light": "resources/light/antenna_green.svg",
          "dark": "resources/dark/antenna_green.svg"
        }
      },
      {
        "command": "dbux.backendLogin",
        "title": "Dbux: Backend Login"
      },
      {
        "command": "dbux.systemCheck",
        "title": "Dbux: Check System Dependencies"
      },
      {
        "command": "dbux.showHelp",
        "title": "Dbux: Help",
        "icon": {
          "light": "resources/light/question.svg",
          "dark": "resources/dark/question.svg"
        }
      },
      {
        "command": "dbux.resetPracticeProgress",
        "title": "Dbux: Reset Practice Progress"
      },
      {
        "command": "dbuxCallStackView.itemClick",
        "title": "Click"
      },
      {
        "command": "dbuxCallGraphView.showContext",
        "title": "Show contexts",
        "icon": {
          "light": "resources/light/document.svg",
          "dark": "resources/dark/document.svg"
        }
      },
      {
        "command": "dbuxCallGraphView.showError",
        "title": "Show all errors",
        "icon": {
          "light": "resources/light/fire.svg",
          "dark": "resources/dark/fire.svg"
        }
      },
      {
        "command": "dbuxCallGraphView.showError.disabled",
        "title": "No error occurred",
        "icon": {
          "light": "resources/light/fire_disabled.svg",
          "dark": "resources/dark/fire_disabled.svg"
        }
      },
      {
        "command": "dbuxCallGraphView.selectError",
        "title": "Select first error trace",
        "icon": {
          "light": "resources/light/fire.svg",
          "dark": "resources/dark/fire.svg"
        }
      },
      {
        "command": "dbuxCallGraphView.setFilter",
        "title": "Filter",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxCallGraphView.clearFilter",
        "title": "Clear Filter",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "dbuxCallStackView.showParent",
        "title": "Switch to Parent",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxCallStackView.showScheduler",
        "title": "Switch to Scheduler",
        "icon": {
          "light": "resources/light/string.svg",
          "dark": "resources/dark/string.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.switchGroupingMode",
        "title": "SwitchMode",
        "icon": {
          "light": "resources/light/string.svg",
          "dark": "resources/dark/string.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.selectObject",
        "title": "Select this object",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.valueRender",
        "title": "Inspect this value",
        "icon": {
          "light": "resources/light/magnifier.svg",
          "dark": "resources/dark/magnifier.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousInContext",
        "title": "Dbux: Go to previous \"non-trivial\" trace in context",
        "icon": {
          "light": "resources/light/previousInContext.svg",
          "dark": "resources/dark/previousInContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousChildContext",
        "title": "Dbux: Go to previous function call in context",
        "icon": {
          "light": "resources/light/previousChildContext.svg",
          "dark": "resources/dark/previousChildContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousParentContext",
        "title": "Dbux: Go to start of context",
        "icon": {
          "light": "resources/light/previousParentContext.svg",
          "dark": "resources/dark/previousParentContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextInContext",
        "title": "Dbux: Go to next \"non-trivial\" trace in context",
        "icon": {
          "light": "resources/light/nextInContext.svg",
          "dark": "resources/dark/nextInContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextChildContext",
        "title": "Dbux: Go to next function call in context",
        "icon": {
          "light": "resources/light/nextChildContext.svg",
          "dark": "resources/dark/nextChildContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextParentContext",
        "title": "Dbux: Go to end of context",
        "icon": {
          "light": "resources/light/nextParentContext.svg",
          "dark": "resources/dark/nextParentContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousStaticTrace",
        "title": "Dbux: Go to previous execution of the same trace",
        "icon": {
          "light": "resources/light/previousStaticTrace.svg",
          "dark": "resources/dark/previousStaticTrace.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextStaticTrace",
        "title": "Dbux: Go to next execution of the same trace",
        "icon": {
          "light": "resources/light/nextStaticTrace.svg",
          "dark": "resources/dark/nextStaticTrace.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousTrace",
        "title": "Dbux: Go to previous trace (unconditionally)",
        "icon": {
          "light": "resources/light/leftArrow.svg",
          "dark": "resources/dark/leftArrow.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextTrace",
        "title": "Dbux: Go to next trace (unconditionally)",
        "icon": {
          "light": "resources/light/rightArrow.svg",
          "dark": "resources/dark/rightArrow.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.selectTraceAtCursor",
        "title": "Dbux: Select Trace At Cursor",
        "icon": {
          "light": "resources/light/crosshair_red.svg",
          "dark": "resources/dark/crosshair_red.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.selectTraceAtCursor.empty",
        "title": "No traces at cursor",
        "icon": {
          "light": "resources/light/crosshair_disabled.svg",
          "dark": "resources/dark/crosshair_disabled.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.expandNode",
        "title": "Expand",
        "icon": {
          "light": "resources/light/expand.svg",
          "dark": "resources/dark/expand.svg"
        }
      },
      {
        "command": "dbuxApplicationsView.showEntryPoint",
        "title": "Go to Entry",
        "icon": {
          "light": "resources/light/nextTrace.svg",
          "dark": "resources/dark/nextTrace.svg"
        }
      },
      {
        "command": "dbuxProjectView.showDiff",
        "title": "Show difference",
        "icon": {
          "light": "resources/light/magnifier.svg",
          "dark": "resources/dark/magnifier.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.addProjectToWorkspace",
        "title": "Add Project Folder to Workspace",
        "icon": {
          "light": "resources/light/crosshair.svg",
          "dark": "resources/dark/crosshair.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.deleteProject",
        "title": "Delete Project Folder",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.stopProject",
        "title": "Stop project",
        "icon": {
          "light": "resources/light/pause.svg",
          "dark": "resources/dark/pause.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.activateBugWithDebugger",
        "title": "Activate Bug With Debugger",
        "icon": {
          "light": "resources/light/debug.svg",
          "dark": "resources/dark/debug.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.activateBug",
        "title": "Activate Bug",
        "icon": {
          "light": "resources/light/play.svg",
          "dark": "resources/dark/play.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.busyIcon",
        "title": "dbux-project running...",
        "icon": {
          "light": "resources/light/hourglass.svg",
          "dark": "resources/dark/hourglass.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.stopBug",
        "title": "Stop bug",
        "icon": {
          "light": "resources/light/pause.svg",
          "dark": "resources/dark/pause.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.resetBug",
        "title": "Reset this bug",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.showWebsite",
        "title": "Show website",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.showBugIntroduction",
        "title": "Show introduction",
        "icon": {
          "light": "resources/light/question.svg",
          "dark": "resources/dark/question.svg"
        }
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "dbux.runFile",
          "when": "editorLangId == javascript",
          "group": "navigation@5"
        },
        {
          "command": "dbuxCallGraphView.selectError",
          "when": "dbuxCallGraphView.context.hasError == true && dbux.context.showNavButton == true",
          "group": "navigation@32"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor",
          "when": "dbuxTraceDetailsView.context.hasTracesAtCursor == true && dbux.context.showNavButton == true",
          "group": "navigation@11"
        }
      ],
      "view/item/context": [
        {
          "command": "dbuxCallStackView.showParent",
          "when": "view == dbuxCallStackView && viewItem == callStackNode.both.scheduler",
          "group": "inline"
        },
        {
          "command": "dbuxCallStackView.showScheduler",
          "when": "view == dbuxCallStackView && viewItem == callStackNode.both.parent",
          "group": "inline"
        },
        {
          "command": "dbuxTraceDetailsView.switchGroupingMode",
          "when": "viewItem == dbuxTraceDetailsView.node.staticTraceTDNodeRoot",
          "group": "inline@2"
        },
        {
          "command": "dbuxTraceDetailsView.expandNode",
          "when": "viewItem == dbuxTraceDetailsView.node.staticTraceTDNodeRoot",
          "group": "inline@3"
        },
        {
          "command": "dbuxTraceDetailsView.selectObject",
          "when": "viewItem == dbuxTraceDetailsView.traceObjectTDNodeRoot.withObjectValue",
          "group": "inline"
        },
        {
          "command": "dbuxTraceDetailsView.valueRender",
          "when": "viewItem == dbuxTraceDetailsView.node.traceValueNode",
          "group": "inline"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousInContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@3"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousChildContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@2"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousParentContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@1"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextInContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@4"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextChildContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@5"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextParentContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@6"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousStaticTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@7"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextStaticTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@8"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@9"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@10"
        },
        {
          "command": "dbuxApplicationsView.showEntryPoint",
          "when": "view == dbuxApplicationsView && viewItem == ApplicationNode",
          "group": "inline"
        },
        {
          "command": "dbuxProjectView.node.addProjectToWorkspace",
          "when": "viewItem =~ /dbuxProjectView\\.projectNode/",
          "group": "inline@1"
        },
        {
          "command": "dbuxProjectView.node.deleteProject",
          "when": "viewItem =~ /dbuxProjectView\\.projectNode/ && !dbuxProjectView.context.isBusy",
          "group": "inline@2"
        },
        {
          "command": "dbuxProjectView.node.stopProject",
          "when": "viewItem == dbuxProjectView.projectNode.RunningInBackground",
          "group": "inline@0"
        },
        {
          "command": "dbuxProjectView.node.activateBugWithDebugger",
          "when": "viewItem =~ /dbuxProjectView\\.bugNode\\.(None|Done)\\..*/ && !dbuxProjectView.context.isBusy",
          "group": "inline@19"
        },
        {
          "command": "dbuxProjectView.node.activateBug",
          "when": "viewItem =~ /dbuxProjectView\\.bugNode\\.(None|Done)\\..*/ && !dbuxProjectView.context.isBusy",
          "group": "inline@20"
        },
        {
          "command": "dbuxProjectView.node.busyIcon",
          "when": "viewItem =~ /dbuxProjectView\\.bugNode\\.(None|Done)\\..*/ && dbuxProjectView.context.isBusy",
          "group": "inline@25"
        },
        {
          "command": "dbuxProjectView.node.stopBug",
          "when": "viewItem =~ /dbuxProjectView\\.bugNode\\.RunningInBackground\\..*/",
          "group": "inline@26"
        },
        {
          "command": "dbuxProjectView.node.resetBug",
          "when": "viewItem =~ /dbuxProjectView\\.bugNode\\..*\\..*/ && !dbuxProjectView.context.isBusy",
          "group": "inline@15"
        },
        {
          "command": "dbuxProjectView.node.showWebsite",
          "when": "viewItem =~ /dbuxProjectView\\.bugNode\\.RunningInBackground\\.hasWebsite/",
          "group": "inline@10"
        },
        {
          "command": "dbuxProjectView.node.showBugIntroduction",
          "when": "viewItem =~ /dbuxProjectView\\.bugNode/",
          "group": "inline@9"
        }
      ],
      "view/title": [
        {
          "command": "dbuxCallGraphView.setFilter",
          "when": "view == dbuxCallGraphView && dbuxCallGraphView.context.filtering == false",
          "group": "navigation"
        },
        {
          "command": "dbuxCallGraphView.clearFilter",
          "when": "view == dbuxCallGraphView && dbuxCallGraphView.context.filtering == true",
          "group": "navigation"
        },
        {
          "command": "dbuxCallGraphView.showContext",
          "when": "view == dbuxCallGraphView && dbuxCallGraphView.context.mode != context && dbuxCallGraphView.context.hasError == true",
          "group": "navigation"
        },
        {
          "command": "dbuxCallGraphView.showError",
          "when": "view == dbuxCallGraphView && dbuxCallGraphView.context.mode != error && dbuxCallGraphView.context.hasError == true",
          "group": "navigation"
        },
        {
          "command": "dbuxCallGraphView.showError.disabled",
          "when": "view == dbuxCallGraphView && dbuxCallGraphView.context.hasError == false",
          "group": "navigation"
        },
        {
          "command": "dbuxCallGraphView.selectError",
          "when": "view == dbuxTraceDetailsView && dbuxCallGraphView.context.hasError == true",
          "group": "navigation@25"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor",
          "when": "view == dbuxTraceDetailsView && dbuxTraceDetailsView.context.hasTracesAtCursor == true",
          "group": "navigation@20"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor.empty",
          "when": "view == dbuxTraceDetailsView && dbuxTraceDetailsView.context.hasTracesAtCursor == false",
          "group": "navigation@20"
        },
        {
          "command": "dbux.runFile",
          "when": "view == dbuxTraceDetailsView",
          "group": "navigation@5"
        },
        {
          "command": "dbux.showGraphView",
          "when": "view == dbuxTraceDetailsView && dbuxWebView.context.isActive == false",
          "group": "navigation@10"
        },
        {
          "command": "dbux.hideGraphView",
          "when": "view == dbuxTraceDetailsView && dbuxWebView.context.isActive == true",
          "group": "navigation@10"
        },
        {
          "command": "dbux.togglePracticeView",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@3"
        },
        {
          "command": "dbux.startRuntimeServer",
          "when": "view == dbuxApplicationsView && dbux.context.runtimeServerStarted == false",
          "group": "navigation@7"
        },
        {
          "command": "dbux.stopRuntimeServer",
          "when": "view == dbuxApplicationsView && dbux.context.runtimeServerStarted == true",
          "group": "navigation@8"
        },
        {
          "command": "dbux.runFile",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@15"
        },
        {
          "command": "dbux.debugFile",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@10"
        },
        {
          "command": "dbux.showHelp",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@5"
        },
        {
          "command": "dbuxProjectView.showDiff",
          "when": "view == dbuxProjectView",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "dbuxCallStackView.itemClick",
          "when": "false"
        },
        {
          "command": "dbuxCallGraphView.showContext",
          "when": "false"
        },
        {
          "command": "dbuxCallGraphView.showError",
          "when": "false"
        },
        {
          "command": "dbuxCallGraphView.showError.disabled",
          "when": "false"
        },
        {
          "command": "dbuxCallGraphView.selectError",
          "when": "false"
        },
        {
          "command": "dbuxCallGraphView.setFilter",
          "when": "false"
        },
        {
          "command": "dbuxCallGraphView.clearFilter",
          "when": "false"
        },
        {
          "command": "dbuxCallStackView.showParent",
          "when": "false"
        },
        {
          "command": "dbuxCallStackView.showScheduler",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.switchGroupingMode",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.selectObject",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.valueRender",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor.empty",
          "when": "false"
        },
        {
          "command": "dbuxApplicationsView.showEntryPoint",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.addProjectToWorkspace",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.deleteProject",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.stopProject",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.activateBugWithDebugger",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.activateBug",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.busyIcon",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.stopBug",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.resetBug",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.showWebsite",
          "when": "false"
        },
        {
          "command": "dbux.cancelBugRunner",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.showBugIntroduction",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.expandNode",
          "when": "false"
        }
      ]
    },
    "configuration": [
      {
        "title": "Dbux",
        "properties": {
          "dbux.run.dbuxArgs": {
            "type": "string",
            "default": "--esnext",
            "description": "Custom `dbux run` command options. You can find a list of all available dbux command options in https://github.com/Domiii/dbux/blob/master/dbux-cli/src/commandCommons.js",
            "scope": "resource"
          },
          "dbux.run.nodeArgs": {
            "type": "string",
            "default": "--enable-source-maps",
            "description": "Custom node options passed to node when running the program.",
            "scope": "resource"
          },
          "dbux.run.programArgs": {
            "type": "string",
            "default": "",
            "description": "Custom program arguments, available to the program via `process.argv`.",
            "scope": "resource"
          },
          "dbux.run.env": {
            "type": "object",
            "default": {},
            "description": "Custom program environment variables available via `process.env` (probably not working yet).",
            "scope": "resource"
          },
          "dbux.debug.dbuxArgs": {
            "type": "string",
            "default": "--esnext",
            "description": "Custom `dbux run` command options. You can find a list of all available dbux command options in https://github.com/Domiii/dbux/blob/master/dbux-cli/src/commandCommons.js",
            "scope": "resource"
          },
          "dbux.debug.nodeArgs": {
            "type": "string",
            "default": "",
            "description": "Custom node options passed to node when running the program.",
            "scope": "resource"
          },
          "dbux.debug.programArgs": {
            "type": "string",
            "default": "",
            "description": "Custom program arguments, available to the program via `process.argv`.",
            "scope": "resource"
          },
          "dbux.debug.env": {
            "type": "object",
            "default": {},
            "description": "Custom program environment variables available via `process.env` (probably not working yet).",
            "scope": "resource"
          }
        }
      }
    ]
  },
  "scripts": {
    "test": "node ./test/runTest.js",
    "build:clean": "rm -rf ./dist ./public ./resources/dist && rm -rf *.vsix",
    "vscode:prepublish": "",
    "uninstallself": "code --uninstall-extension Domi.dbux-code",
    "reinstallself": "yarn run uninstallself --silent ; files=(*.vsix); code --install-extension \"${files[0]}\" && echo 'DBUX installed. >Developer: Reload Window< to see it.'",
    "readme": "echo 'Updating README.md...' && node ../scripts/replaceReadmeAnnotations.js",
    "package-no-build": "rm -rf *.vsix && yarn run readme && echo 'Packaging...' && vsce package --yarn",
    "package:analyze": "cd .. && yarn run build:prod && cd dbux-code && yarn run package-no-build && mkdir public && mv *.vsix public && cd public && 7z x -o\"contents\" *.vsix",
    "package:publish-no-build": "yarn run package-no-build && yarn run publish-only",
    "publish-only": "echo 'Publishing...' && vsce publish --yarn",
    "watch": "node ../node_modules/webpack/bin/webpack.js --watch --info-verbosity verbose --progress"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.41.0",
    "copy-webpack-plugin": "^6.0.3",
    "glob": "^7.1.5",
    "mocha": "^6.2.2",
    "terser-webpack-plugin": "^4.1.0",
    "typescript": "^3.6.4",
    "vsce": "^1.77.0",
    "vscode-test": "^1.2.2",
    "webpack": "^4.41.5",
    "webpack-bundle-analyzer": "^3.8.0",
    "webpack-cli": "^3.3.10",
    "webpack-node-externals": "^2.5.0"
  },
  "dependencies": {
    "@dbux/babel-plugin": "^0.2.1-dev.0",
    "@dbux/cli": "^0.2.1-dev.0",
    "@dbux/common": "^0.2.1-dev.0",
    "@dbux/data": "^0.2.1-dev.0",
    "@dbux/graph-common": "^0.2.1-dev.0",
    "@dbux/graph-host": "^0.2.1-dev.0",
    "@dbux/projects": "^0.2.1-dev.0",
    "@dbux/runtime": "^0.2.1-dev.0",
    "firebase": "^7.17.2",
    "lodash": "^4.17.19",
    "moment": "^2.24.0",
    "nanoevents": "^5.1.8",
    "socket.io": "^2.3.0",
    "strip-color": "^0.1.0"
  },
  "_moduleAliases": {}
}
